import{accountUrl as r,authToken as i}from"./config-gMOlDiSH.js";import{aa as d,ab as S}from"./index-kJarJC0y.js";const c=async(e,a)=>{const t={};return a.forEach(n=>t[n]=e.get(n)),t},u=async(e,a)=>{const t=await fetch(e,a);if(!t.ok)throw S({message:"Something went wrong"},{status:500});return{data:await t.json()}},m=(e,a,t)=>e?a:[{message:t},{status:401}],v=(e,a)=>Object.values(e.data).filter(t=>{if(t.email===a.email&&t.password===a.password)return localStorage.setItem("localAccountId",t.id),t}),b=(e,a)=>Object.values(e).filter(t=>{if(t.email===a.email)return localStorage.setItem("localAccountId",t.id),t}),A=async(e,a,t)=>(await u(`${r}/user_${e}.json${i}`,{method:a,headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),d("/QuickMart/authentication/login/success")),O=e=>async({request:a})=>{const t=await a.formData(),n=t.get("intent");console.log(n),console.log(t.get("itemId"));const p=n==="login",g=n==="reset",f=n==="new password",h=n==="signup",w=n==="address",$=n==="payment",C=n==="add to cart",P=n==="remove item from cart";let o,s=[`${r}.json${i}`],l;const y=await u(s);if((p||g)&&(o=await c(t,["email","password"])),f&&(o=await c(t,["password"]),s=[`${r}/user_${e}.json${i}`]),h){const N=crypto.getRandomValues(new Uint32Array(1))[0];o=await c(t,["fullName","email","password"]),!b(y.data,o).length>0?s=[`${r}/user_${N}.json${i}`,{method:a.method,headers:{"Content-Type":"application/json"},body:JSON.stringify({id:N,...o})}]:l="Account already exist"}w&&(o=await c(t,["fullName","province","city","street","postalCode","phoneNumber"]),s=[`${r}/user_${e}.json${i}`,{method:a.method,headers:{"Content-Type":"application/json"},body:JSON.stringify({"shipping address":o})}]),$&&(o=await c(t,["cardName","cardNumber","expiration","CVV"]),s=[`${r}/user_${e}.json${i}`,{method:a.method,headers:{"Content-Type":"application/json"},body:JSON.stringify({"payment method":o})}]),C&&(o=JSON.parse(t.get("product")),s=[`${r}/user_${e}/cart/cart_${o.id}.json${i}`,{method:a.method,headers:{"Content-Type":"application/json"},body:JSON.stringify({...o})}]),P&&(s=[`${r}/user_${e}/cart/cart_${t.get("itemId")}.json${i}`,{method:a.method,headers:{"Content-Type":"application/json"}}]);const{data:j}=await u(...s);return p?m(v(y,o).length>0,d("/QuickMart"),"Invalid email or password"):g?m(b(j,o).length!==0,d("/QuickMart/authentication/login/email verification"),"Invalid email"):f?m(j.password!==o.password,A(e,a.method,o),"New password cannot be the same as your old password"):h?l?[{message:l},{status:401}]:d("/QuickMart/authentication/signup/email verification"):w||$?!0:[{message:"Something went wrong"},{status:500}]};export{O as action};
